# Generated by Django 3.1.2 on 2020-12-18 09:20

from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(error_messages={'unique': 'Такой email уже зарегистрирован'}, max_length=254, unique=True, verbose_name='email address')),
                ('is_expert', models.BooleanField(default=False, help_text='Отметьте, если пользователь является экспертом.', verbose_name='cтатус эксперта')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('middle_name', models.CharField(blank=True, max_length=150, verbose_name='отчество')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='avatar_photos/', verbose_name='Фото профиля')),
                ('phone_number', models.CharField(blank=True, max_length=200, null=True, verbose_name='Номер телефона для связи')),
                ('mail', models.CharField(blank=True, max_length=200, null=True, verbose_name='Почтовый адрес')),
                ('inn', models.CharField(blank=True, max_length=200, null=True, verbose_name='Ваш ИНН')),
                ('ogrn', models.CharField(blank=True, max_length=200, null=True, verbose_name='ОГРН')),
                ('legal_address', models.CharField(blank=True, max_length=200, null=True, verbose_name='Юридический адрес')),
                ('director_fio', models.CharField(blank=True, max_length=200, null=True, verbose_name='ФИО Ген.Директора')),
                ('rs', models.CharField(blank=True, max_length=200, null=True, verbose_name='Расчетный счет')),
                ('bank', models.CharField(blank=True, max_length=200, null=True, verbose_name='Банк')),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ExpertProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='avatar_photos/', verbose_name='Фото профиля')),
                ('phone_number', models.CharField(blank=True, max_length=200, null=True, verbose_name='Номер телефона для связи')),
                ('work_place', models.CharField(blank=True, max_length=200, null=True, verbose_name='Место работы')),
                ('position', models.CharField(blank=True, max_length=200, null=True, verbose_name='Занимаемая должность')),
                ('interests', models.CharField(blank=True, max_length=200, null=True, verbose_name='Сфера профессиональных интересов')),
                ('education', models.CharField(blank=True, choices=[('Высшее', 'Высшее'), ('Среднее профессиональное', 'Среднее профессиональное')], max_length=200, null=True, verbose_name='Образование')),
                ('degree', models.CharField(blank=True, max_length=200, null=True, verbose_name='Степень образования')),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
